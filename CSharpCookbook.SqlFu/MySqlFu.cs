using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using CSharpCookbook.SqlCompact;
using SqlFu;
using SqlFu.DDL;

namespace CSharpCookbook.SqlFu
{
    public class MySqlFu
    {
        public MySqlFu()
        {            
            SqlFuDao.ConnectionStringIs(ConnectionHelper.MyConnectionString, DbEngine.SqlServerCE);
        }

        public bool TestConnection()
        {
            using (var db = SqlFuDao.GetConnection())
            {
                var personTableExists = db.TableExists<Person>();
                return personTableExists;
            }
        }

        public IEnumerable<Person> QueryPerson()
        {
            using (var db = SqlFuDao.GetConnection())
            {
                var query = db.Query<Person>();
                return query;
            }            
        }

        public IEnumerable<Purchase> QueryPurchase()
        {
            using (var db = SqlFuDao.GetConnection())
            {
                var query = db.Query<Purchase>();
                return query;
            }
        }

        public void InsertPerson(string firstName, string lastName)
        {
            using (var db = SqlFuDao.GetConnection())
            {
                var person = new Person {FirstName = firstName, LastName = lastName};
                db.Insert(person);
            }
        }  
    }

    [Table("Person", PrimaryKey = "Id" , AutoGenerated = true , CreationOptions = IfTableExists.DropIt)]
    public class Person
    {
        public Guid Id { get; set; }        
        public string FirstName { get; set; }         
        public string LastName { get; set; }
    }

    [Table("Purchase", PrimaryKey = "Id", AutoGenerated = true, CreationOptions = IfTableExists.DropIt)]
    public class Purchase
    {
        public Guid Id { get; set; }
        public Guid PersonId { get; set; }
        public decimal Price { get; set; }
    }
}
